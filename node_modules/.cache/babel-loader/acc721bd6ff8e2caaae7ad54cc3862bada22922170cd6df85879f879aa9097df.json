{"ast":null,"code":"var _jsxFileName = \"D:\\\\Power Learn Project\\\\DetoxifyAI\\\\src\\\\components\\\\Progress\\\\ProgressDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../lib/supabase';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { format, differenceInDays } from 'date-fns';\nimport { TrendingUp, Calendar, Target, Heart, Smile, Meh, Frown, Angry } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProgressDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [progressLogs, setProgressLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [userProfile, setUserProfile] = useState(null);\n  useEffect(() => {\n    if (user) {\n      fetchProgressLogs();\n      fetchUserProfile();\n    }\n  }, [user]);\n  const fetchProgressLogs = async () => {\n    if (!user) return;\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('progress_logs').select('*').eq('user_id', user.id).order('date', {\n        ascending: true\n      });\n      if (error) throw error;\n      setProgressLogs(data || []);\n    } catch (error) {\n      console.error('Error fetching progress logs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUserProfile = async () => {\n    if (!user) return;\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('users').select('*').eq('id', user.id).single();\n      if (error) throw error;\n      setUserProfile(data);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n    }\n  };\n  const getSobrietyDays = () => {\n    if (!(userProfile !== null && userProfile !== void 0 && userProfile.sobriety_start)) return 0;\n    return differenceInDays(new Date(), new Date(userProfile.sobriety_start));\n  };\n  const getCurrentStreak = () => {\n    if (progressLogs.length === 0) return 0;\n    const sortedLogs = [...progressLogs].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    let streak = 0;\n    let currentDate = new Date();\n    for (const log of sortedLogs) {\n      const logDate = new Date(log.date);\n      const daysDiff = differenceInDays(currentDate, logDate);\n      if (daysDiff <= 1) {\n        streak++;\n        currentDate = logDate;\n      } else {\n        break;\n      }\n    }\n    return streak;\n  };\n  const getAverageCravings = () => {\n    if (progressLogs.length === 0) return 0;\n    const total = progressLogs.reduce((sum, log) => sum + log.cravings_level, 0);\n    return Math.round(total / progressLogs.length * 10) / 10;\n  };\n  const getMoodDistribution = () => {\n    const moodCounts = {};\n    progressLogs.forEach(log => {\n      moodCounts[log.mood] = (moodCounts[log.mood] || 0) + 1;\n    });\n    return Object.entries(moodCounts).map(([mood, count]) => ({\n      mood,\n      count\n    }));\n  };\n  const getChartData = () => {\n    return progressLogs.slice(-7).map(log => ({\n      date: format(new Date(log.date), 'MMM dd'),\n      cravings: log.cravings_level,\n      mood: getMoodScore(log.mood)\n    }));\n  };\n  const getMoodScore = mood => {\n    const scores = {\n      'excellent': 5,\n      'good': 4,\n      'okay': 3,\n      'bad': 2,\n      'terrible': 1\n    };\n    return scores[mood] || 3;\n  };\n  const getMoodIcon = mood => {\n    const icons = {\n      excellent: Heart,\n      good: Smile,\n      okay: Meh,\n      bad: Frown,\n      terrible: Angry\n    };\n    const IconComponent = icons[mood] || Meh;\n    return /*#__PURE__*/_jsxDEV(IconComponent, {\n      className: \"w-6 h-6 text-gray-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-64\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10 h-10 bg-primary-100 rounded-full flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Calendar, {\n              className: \"w-5 h-5 text-primary-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Sobriety Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: getSobrietyDays()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10 h-10 bg-success-100 rounded-full flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(TrendingUp, {\n              className: \"w-5 h-5 text-success-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Current Streak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: getCurrentStreak()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10 h-10 bg-warning-100 rounded-full flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Target, {\n              className: \"w-5 h-5 text-warning-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Avg. Cravings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: getAverageCravings()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-900 mb-4\",\n          children: \"Cravings Trend (Last 7 Days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-64\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: getChartData(),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [0, 10]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"cravings\",\n                stroke: \"#0ea5e9\",\n                strokeWidth: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-900 mb-4\",\n          children: \"Mood Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-64\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: getMoodDistribution(),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"mood\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                fill: \"#22c55e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-gray-900 mb-4\",\n        children: \"Recent Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: progressLogs.slice(-5).reverse().map(log => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-3 bg-gray-50 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl\",\n              children: [log.mood === 'excellent' && '😊', log.mood === 'good' && '🙂', log.mood === 'okay' && '😐', log.mood === 'bad' && '😔', log.mood === 'terrible' && '😢']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium text-gray-900\",\n                children: format(new Date(log.date), 'MMM dd, yyyy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"Cravings: \", log.cravings_level, \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), log.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 max-w-xs truncate\",\n            children: log.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressDashboard, \"rK7/pOUNMueRLd5ER+tzp3sIgao=\", false, function () {\n  return [useAuth];\n});\n_c = ProgressDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProgressDashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useAuth","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","BarChart","Bar","format","differenceInDays","TrendingUp","Calendar","Target","Heart","Smile","Meh","Frown","Angry","jsxDEV","_jsxDEV","ProgressDashboard","_s","user","progressLogs","setProgressLogs","loading","setLoading","userProfile","setUserProfile","fetchProgressLogs","fetchUserProfile","data","error","from","select","eq","id","order","ascending","console","single","getSobrietyDays","sobriety_start","Date","getCurrentStreak","length","sortedLogs","sort","a","b","date","getTime","streak","currentDate","log","logDate","daysDiff","getAverageCravings","total","reduce","sum","cravings_level","Math","round","getMoodDistribution","moodCounts","forEach","mood","Object","entries","map","count","getChartData","slice","cravings","getMoodScore","scores","getMoodIcon","icons","excellent","good","okay","bad","terrible","IconComponent","className","fileName","_jsxFileName","lineNumber","columnNumber","children","width","height","strokeDasharray","dataKey","domain","type","stroke","strokeWidth","fill","reverse","notes","_c","$RefreshReg$"],"sources":["D:/Power Learn Project/DetoxifyAI/src/components/Progress/ProgressDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../lib/supabase';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { ProgressLog } from '../../lib/supabase';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\r\nimport { format, differenceInDays } from 'date-fns';\r\nimport { TrendingUp, Calendar, Target, Award, Heart, Smile, Meh, Frown, Angry } from 'lucide-react';\r\n\r\nexport const ProgressDashboard: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [progressLogs, setProgressLogs] = useState<ProgressLog[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userProfile, setUserProfile] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchProgressLogs();\r\n      fetchUserProfile();\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchProgressLogs = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('progress_logs')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('date', { ascending: true });\r\n\r\n      if (error) throw error;\r\n      setProgressLogs(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching progress logs:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUserProfile = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', user.id)\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      setUserProfile(data);\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n    }\r\n  };\r\n\r\n  const getSobrietyDays = () => {\r\n    if (!userProfile?.sobriety_start) return 0;\r\n    return differenceInDays(new Date(), new Date(userProfile.sobriety_start));\r\n  };\r\n\r\n  const getCurrentStreak = () => {\r\n    if (progressLogs.length === 0) return 0;\r\n    \r\n    const sortedLogs = [...progressLogs].sort((a, b) => \r\n      new Date(b.date).getTime() - new Date(a.date).getTime()\r\n    );\r\n    \r\n    let streak = 0;\r\n    let currentDate = new Date();\r\n    \r\n    for (const log of sortedLogs) {\r\n      const logDate = new Date(log.date);\r\n      const daysDiff = differenceInDays(currentDate, logDate);\r\n      \r\n      if (daysDiff <= 1) {\r\n        streak++;\r\n        currentDate = logDate;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return streak;\r\n  };\r\n\r\n  const getAverageCravings = () => {\r\n    if (progressLogs.length === 0) return 0;\r\n    const total = progressLogs.reduce((sum, log) => sum + log.cravings_level, 0);\r\n    return Math.round(total / progressLogs.length * 10) / 10;\r\n  };\r\n\r\n  const getMoodDistribution = () => {\r\n    const moodCounts: { [key: string]: number } = {};\r\n    progressLogs.forEach(log => {\r\n      moodCounts[log.mood] = (moodCounts[log.mood] || 0) + 1;\r\n    });\r\n    return Object.entries(moodCounts).map(([mood, count]) => ({ mood, count }));\r\n  };\r\n\r\n  const getChartData = () => {\r\n    return progressLogs.slice(-7).map(log => ({\r\n      date: format(new Date(log.date), 'MMM dd'),\r\n      cravings: log.cravings_level,\r\n      mood: getMoodScore(log.mood),\r\n    }));\r\n  };\r\n\r\n  const getMoodScore = (mood: string) => {\r\n    const scores: { [key: string]: number } = {\r\n      'excellent': 5,\r\n      'good': 4,\r\n      'okay': 3,\r\n      'bad': 2,\r\n      'terrible': 1,\r\n    };\r\n    return scores[mood] || 3;\r\n  };\r\n\r\n  const getMoodIcon = (mood: string) => {\r\n    const icons: { [key: string]: React.ComponentType<any> } = {\r\n      excellent: Heart,\r\n      good: Smile,\r\n      okay: Meh,\r\n      bad: Frown,\r\n      terrible: Angry,\r\n    };\r\n    const IconComponent = icons[mood] || Meh;\r\n    return <IconComponent className=\"w-6 h-6 text-gray-600\" />;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"card\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-10 h-10 bg-primary-100 rounded-full flex items-center justify-center\">\r\n              <Calendar className=\"w-5 h-5 text-primary-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Sobriety Days</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{getSobrietyDays()}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-10 h-10 bg-success-100 rounded-full flex items-center justify-center\">\r\n              <TrendingUp className=\"w-5 h-5 text-success-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Current Streak</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{getCurrentStreak()}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-10 h-10 bg-warning-100 rounded-full flex items-center justify-center\">\r\n              <Target className=\"w-5 h-5 text-warning-600\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Avg. Cravings</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{getAverageCravings()}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Cravings Trend */}\r\n        <div className=\"card\">\r\n          <h3 className=\"font-semibold text-gray-900 mb-4\">Cravings Trend (Last 7 Days)</h3>\r\n          <div className=\"h-64\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <LineChart data={getChartData()}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis domain={[0, 10]} />\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey=\"cravings\" stroke=\"#0ea5e9\" strokeWidth={2} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mood Distribution */}\r\n        <div className=\"card\">\r\n          <h3 className=\"font-semibold text-gray-900 mb-4\">Mood Distribution</h3>\r\n          <div className=\"h-64\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart data={getMoodDistribution()}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"mood\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"count\" fill=\"#22c55e\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Entries */}\r\n      <div className=\"card\">\r\n        <h3 className=\"font-semibold text-gray-900 mb-4\">Recent Entries</h3>\r\n        <div className=\"space-y-3\">\r\n          {progressLogs.slice(-5).reverse().map((log) => (\r\n            <div key={log.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"text-2xl\">\r\n                  {log.mood === 'excellent' && '😊'}\r\n                  {log.mood === 'good' && '🙂'}\r\n                  {log.mood === 'okay' && '😐'}\r\n                  {log.mood === 'bad' && '😔'}\r\n                  {log.mood === 'terrible' && '😢'}\r\n                </div>\r\n                <div>\r\n                  <p className=\"font-medium text-gray-900\">{format(new Date(log.date), 'MMM dd, yyyy')}</p>\r\n                  <p className=\"text-sm text-gray-500\">Cravings: {log.cravings_level}/10</p>\r\n                </div>\r\n              </div>\r\n              {log.notes && (\r\n                <p className=\"text-sm text-gray-600 max-w-xs truncate\">{log.notes}</p>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}